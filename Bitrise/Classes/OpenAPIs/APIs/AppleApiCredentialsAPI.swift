//
// AppleApiCredentialsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



open class AppleApiCredentialsAPI {
    /**
     List Apple API credentials for a specific user
     
     - parameter userSlug: (path) User slug 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appleApiCredentialList(userSlug: String, apiResponseQueue: DispatchQueue = BitriseAPI.apiResponseQueue, completion: @escaping ((_ data: V0AppleAPICredentialsListResponse?,_ error: Error?) -> Void)) {
        appleApiCredentialListWithRequestBuilder(userSlug: userSlug).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List Apple API credentials for a specific user
     - GET /users/{user-slug}/apple-api-credentials
     - List Apple API credentials for a specific Bitrise user
     - API Key:
       - type: apiKey Authorization 
       - name: PersonalAccessToken
     - parameter userSlug: (path) User slug 
     - returns: RequestBuilder<V0AppleAPICredentialsListResponse> 
     */
    open class func appleApiCredentialListWithRequestBuilder(userSlug: String) -> RequestBuilder<V0AppleAPICredentialsListResponse> {
        var path = "/users/{user-slug}/apple-api-credentials"
        let userSlugPreEscape = "\(APIHelper.mapValueToPathItem(userSlug))"
        let userSlugPostEscape = userSlugPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{user-slug}", with: userSlugPostEscape, options: .literal, range: nil)
        let URLString = BitriseAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<V0AppleAPICredentialsListResponse>.Type = BitriseAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
